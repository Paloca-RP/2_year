// Generated by view binder compiler. Do not edit!
package com.example.pratica4ex1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pratica4ex1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCalculate;

  @NonNull
  public final LinearLayout halfDown;

  @NonNull
  public final ConstraintLayout halfUp;

  @NonNull
  public final EditText inputHeight;

  @NonNull
  public final EditText inputWeight;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnCalculate,
      @NonNull LinearLayout halfDown, @NonNull ConstraintLayout halfUp,
      @NonNull EditText inputHeight, @NonNull EditText inputWeight, @NonNull TextView textView,
      @NonNull TextView textView2, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.btnCalculate = btnCalculate;
    this.halfDown = halfDown;
    this.halfUp = halfUp;
    this.inputHeight = inputHeight;
    this.inputWeight = inputWeight;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCalculate;
      Button btnCalculate = ViewBindings.findChildViewById(rootView, id);
      if (btnCalculate == null) {
        break missingId;
      }

      id = R.id.halfDown;
      LinearLayout halfDown = ViewBindings.findChildViewById(rootView, id);
      if (halfDown == null) {
        break missingId;
      }

      id = R.id.halfUp;
      ConstraintLayout halfUp = ViewBindings.findChildViewById(rootView, id);
      if (halfUp == null) {
        break missingId;
      }

      id = R.id.inputHeight;
      EditText inputHeight = ViewBindings.findChildViewById(rootView, id);
      if (inputHeight == null) {
        break missingId;
      }

      id = R.id.inputWeight;
      EditText inputWeight = ViewBindings.findChildViewById(rootView, id);
      if (inputWeight == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnCalculate, halfDown, halfUp,
          inputHeight, inputWeight, textView, textView2, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
